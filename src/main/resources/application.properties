server.port = 9000
keycloak.realm=keycloak-god
keycloak.auth-server-url=http://localhost:8080
keycloak.ssl-required=none
keycloak.resource=springboot-god
keycloak.public-client=false
keycloak.bearer-only=false
keycloak.credentials.secret=dhbs10woDm0LA3xxqfDuHMM9535r9RE6

keycloak.securityConstraints[0].authRoles[0] = *
keycloak.securityConstraints[0].securityCollections[0].patterns[0] = /*

# This configuration enables the policy enforcer in order to protect resources served by this application.
# During the boot, the policy enforcer is going to fetch only the paths defined below and associate these paths with specific
#resources defined in Keycloak.
# When defining paths in the configuration, you are not really required to specify a URI for protected resources in Keycloak.
#keycloak.policy-enforcer-config.on-deny-redirect-to=/accessDenied

keycloak.policy-enforcer-config.enforcement-mode=ENFORCING

keycloak.policy-enforcer-config.paths[0].path=/film/{id}
keycloak.policy-enforcer-config.paths[0].methods[0].method=GET
keycloak.policy-enforcer-config.paths[0].methods[0].scopes[0]=view

spring.security.oauth2.resourceserver.opaquetoken.client-id=springboot-god
spring.security.oauth2.resourceserver.opaquetoken.client-secret=dhbs10woDm0LA3xxqfDuHMM9535r9RE6
spring.security.oauth2.resourceserver.opaquetoken.introspection-uri=http://localhost:8080/realms/keycloak-god/protocol/openid-connect/token/introspect
